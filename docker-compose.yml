version: "3"

volumes:
  zookeeper:
  kafka:
  redis:

services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    user: root
    volumes:
      - zookeeper:/bitnami/zookeeper
    networks:
      - portscan-network


  kafka:
    image: "bitnami/kafka:latest"
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      # 客户端访问地址，更换成自己的
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      # 允许使用PLAINTEXT协议(镜像中默认为关闭,需要手动开启)
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 开启自动创建 topic 功能便于测试
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      # 全局消息过期时间 6 小时(测试时可以设置短一点)
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
      # 开启JMX监控
      - JMX_PORT=9999
    volumes:
      - kafka:/bitnami/kafka
    user: root
    depends_on:
      - zookeeper
    networks:
      - portscan-network

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    networks:
      - portscan-network

  portscan-server:
    build:
      context: .
      dockerfile: Dockerfile
    # image: registry.cn-beijing.aliyuncs.com/udemy/portscan:latest
    environment:
      - KAFKA_HOST=kafka:9092
      - REDIS_ADDR=redis:6379
    depends_on:
      - kafka
      - redis
    networks:
      - portscan-network
    volumes:
      - ./wait-for.sh:/app/wait-for.sh

#    command: ["/bin/sh", "-c", "/wait-for.sh redis && /wait-for.sh zookeeper 2181 && /wait-for.sh kafka 9092 && sleep 10 && ./portscan-server"]
    command: [ "-c", "./wait-for.sh redis:6379 -t 60 -- ./wait-for.sh zookeeper:2181 -t 60 -- ./wait-for.sh kafka:9092 -t 60 -- ./portscan-server" ]


networks:
  portscan-network:
    driver: bridge


